import { useEffect, useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import Speech from 'speak-tts'
import styles from '../styles/Home.module.css'
import { random_movements } from '../src/movements'
import ListMovements from '../src/ListMovements'

if (typeof window !== "undefined") {
  const speech = new Speech()
  speech.init();
  speech.setLanguage('pt-BR');  
}

const speak_play = (text) => {
  if(speech.hasBrowserSupport()) {
    if(speech.speaking()) speech.cancel();

    speech.speak({
      text: text,
    }).then(() => {
        console.log("Success !")
    }).catch(e => {
        console.error("An error occurred :", e)
    })
  }
}

const speak_pause = (text) => {
  if(speech.hasBrowserSupport()) {
    speech.cancel()
  }
}

const speak_movements = (movements) => {
  let text_to_speak = '';
  
  movements.forEach(item => {
    text_to_speak += item.speak_form + '. ';
  });

  speak_play(text_to_speak);
}

export default function Home() {
  const [movements, handleMovements] = useState([]);
  const [movementsQuantity, handleMovementsQuantity] = useState(4);

  useEffect(() => {
    speak_movements(movements);
  }, [movements]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Muay Thai Movements</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Muay Thai Movements
        </h1>

          <div className={styles.player_buttons}>
            <button className={styles.btn} disabled={movements.length > 0 ? false : true} onClick={() => speak_movements(movements)}>ðŸ”Š</button>
            <button className={styles.btn} disabled={movements.length > 0 ? false : true} onClick={() => speak_pause()}>ðŸš«</button>
          </div>
          <button  className={styles.btn_sort_news_mov} onClick={() => handleMovements(random_movements(movementsQuantity))}>New movements</button>

          <div className='movements-quantity-buttons'>
            {/* <input type="number" id="movements-quantity" onChange={(e) => handleMovementsQuantity(e.target.value)} value={movementsQuantity} min={1}/> */}
            <button  className={styles.btn_quantity} onClick={() => {handleMovements(random_movements(3)); handleMovementsQuantity(3)}}>3</button>
            <button  className={styles.btn_quantity} onClick={() => {handleMovements(random_movements(4)); handleMovementsQuantity(4)}}>4</button>
            <button  className={styles.btn_quantity} onClick={() => {handleMovements(random_movements(5)); handleMovementsQuantity(5)}}>5</button>
            <button  className={styles.btn_quantity} onClick={() => {handleMovements(random_movements(6)); handleMovementsQuantity(6)}}>6</button>
          </div>
          {movements && movements.length > 0 ? <ListMovements movements={movements}/> : ''}
      </main>
    </div>
  )
}
